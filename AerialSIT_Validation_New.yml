name: AerialSIT Validation

on:
  pull_request:
    branches:
      - release-AerialSIT

jobs:
  #Triggers when there is a Pull Request created and source branches are validated against AerialSIT Org.  
  SCE_Validate_AerialSIT:
    name: AerialSIT Validation
    if: ${{ github.event_name == 'pull_request' && github.base_ref == 'release-AerialSIT'}}
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: '0'
    - uses: actions/setup-node@v1
      with:
        node-version: '12.x' 

    - name: Create Delta Artifacts
      shell: pwsh
      run: |
        ./build/sfdxddl.ps1 -buildtype AutomaticType4 -A2SourceBranch ${{ github.head_ref }} -A2TargetBranch ${{ github.event.pull_request.base.ref }}
    
    - name: Publish Delta Artifacts
      uses: actions/upload-artifact@v2
      with: 
        name: delta-artifact
        path: deploy-artifacts
     
    - name: Install Salesforce CLI
      run: |
        npm install sfdx-cli
        node_modules/sfdx-cli/bin/run --version
        node_modules/sfdx-cli/bin/run plugins --core
    
    - name: Update CLI
      run: node_modules/sfdx-cli/bin/run update        
      
    - name: Authenticate AerialSIT ORG
      run: |
        echo "${SALESFORCE_JWT_SECRET_KEY_LOWER}" > server.key
        node_modules/sfdx-cli/bin/run force:auth:jwt:grant --clientid ${{ secrets.AERSIT1_CONSUMER_KEY }} --jwtkeyfile server.key --username ${{ secrets.AERSIT1_USERNAME}} --instanceurl ${{ secrets.SFDC_SANDBOX_HOST}} 
      env:
        SALESFORCE_JWT_SECRET_KEY_LOWER: ${{ secrets.SALESFORCE_JWT_SECRET_KEY_LOWER }}

    - name: Validate AerialSIT ORG
      run: node_modules/sfdx-cli/bin/run force:source:deploy -p deploy-artifacts/force-app/main/default -u ${{ secrets.AERSIT1_USERNAME}} -c -l RunLocalTests
